<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Booking Details</title>
    <style>
        body {
            background: url('flight back.jpg');
            background-repeat: no-repeat;
            background-size: cover;
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
            color: white;
        }

        h1 {
            text-align: center;
        }

        #bookingDetails {
            max-width: 600px;
            margin: 20px auto;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            opacity: 0;
            animation: fadeIn 1s ease-in-out forwards;
        }

        p {
            margin: 10px 0;
            font-size: 18px;
            line-height: 1.6;
            color: #333;
        }

        button {
            padding: 10px;
            margin: 10px;
            cursor: pointer;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        #confirmBtn {
            background-color: #4CAF50;
            color: white;
        }

        #cancelBtn {
            background-color: #f44336;
            color: white;
            display: none;
        }

        #reservedBtn {
            background-color: #2196F3;
            color: white;
            display: none;
        }

        #confirmationMessage {
            max-width: 400px;
            margin: 20px auto;
            background-color: #4CAF50;
            color: white;
            padding: 15px;
            border-radius: 8px;
            display: none;
        }

        @keyframes fadeIn {
            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    <h1>Booking Details</h1>
    <div id="bookingDetails"></div>
    <div id="confirmationMessage"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const flightDetailsParam = urlParams.get('flightDetails');

            if (flightDetailsParam) {
                const flightDetails = JSON.parse(decodeURIComponent(flightDetailsParam));
                // Display flight details on the page as needed
                const bookingDetailsDiv = document.getElementById('bookingDetails');
                bookingDetailsDiv.innerHTML = `<p>${flightDetails.airline}</p>
                                              <p>${flightDetails.origin} - ${flightDetails.destination}</p>
                                              <p>Departure Time: ${flightDetails.departureTime}</p>
                                              <p>Flight Number: ${flightDetails.flightNumber}</p>
                                              <p>Aircraft Model: ${flightDetails.aircraftModel}</p>
                                              <p>Available Seats: ${flightDetails.availableSeats}</p>
                                              <button onclick="confirmBooking()" id="confirmBtn">Confirm Booking</button>
                                              <button onclick="cancelBooking()" id="cancelBtn">Cancel Booking</button>
                                              <button onclick="viewReservedTickets()" id="reservedBtn">Reserved Tickets</button>`;
            } else {
                // Handle error or no parameter case
                document.getElementById('bookingDetails').innerHTML = "<p>Error: No flight details found.</p>";
            }
        });

        function confirmBooking() {
            const urlParams = new URLSearchParams(window.location.search);
            const flightDetailsParam = urlParams.get('flightDetails');

            if (flightDetailsParam) {
                const flightDetails = JSON.parse(decodeURIComponent(flightDetailsParam));
                const referenceCode = generateReferenceCode();

                // Save booking details and reference code to localStorage
                saveBookingDetailsLocally(flightDetails, referenceCode);

                // Display confirmation message on the page
                const confirmationMessageDiv = document.getElementById('confirmationMessage');
                confirmationMessageDiv.innerHTML = `<p>Booking Confirmed!</p><p>Reference Code: ${referenceCode}</p>`;
                confirmationMessageDiv.style.backgroundColor = '#4CAF50'; // Set background color for confirmation
                confirmationMessageDiv.style.display = 'block';

                // Show the "Cancel Booking" and "Reserved Tickets" buttons
                document.getElementById('cancelBtn').style.display = 'inline-block';
                document.getElementById('reservedBtn').style.display = 'inline-block';
                // Hide the "Confirm Booking" button
                document.getElementById('confirmBtn').style.display = 'none';
            } else {
                alert("Error: No flight details found.");
            }
        }

        function cancelBooking() {
            const urlParams = new URLSearchParams(window.location.search);
            const flightDetailsParam = urlParams.get('flightDetails');

            if (flightDetailsParam) {
                // Remove booking details from localStorage
                removeBookingDetailsLocally();

                // Display cancellation message on the page
                const confirmationMessageDiv = document.getElementById('confirmationMessage');
                confirmationMessageDiv.innerHTML = "<p>Booking Canceled!</p>";
                confirmationMessageDiv.style.backgroundColor = '#f44336'; // Set background color for cancellation
                confirmationMessageDiv.style.display = 'block';

                // Hide the "Cancel Booking" button
                document.getElementById('cancelBtn').style.display = 'none';
                // Show the "Confirm Booking" button
                document.getElementById('confirmBtn').style.display = 'inline-block';
            } else {
                alert("Error: No flight details found.");
            }
        }

        function viewReservedTickets() {
            // Redirect to the reservedTickets.html page
            window.location.href = 'bookingHistory.html';
        }

        function generateReferenceCode() {
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
            const codeLength = 8;
            let referenceCode = '';

            for (let i = 0; i < codeLength; i++) {
                const randomIndex = Math.floor(Math.random() * characters.length);
                referenceCode += characters.charAt(randomIndex);
            }

            return referenceCode;
        }

        function saveBookingDetailsLocally(flightDetails, referenceCode) {
            // Get existing bookings or initialize an empty array
            const existingBookings = JSON.parse(localStorage.getItem('bookings')) || [];

            // Add the new booking to the array
            const newBooking = {
                flightDetails,
                referenceCode,
                timestamp: new Date().toISOString()
            };
            existingBookings.push(newBooking);

            // Save the updated array back to localStorage
            localStorage.setItem('bookings', JSON.stringify(existingBookings));
        }

        function removeBookingDetailsLocally() {
            // Get existing bookings or initialize an empty array
            const existingBookings = JSON.parse(localStorage.getItem('bookings')) || [];

            // Remove the last booking from the array
            existingBookings.pop();

            // Save the updated array back to localStorage
            localStorage.setItem('bookings', JSON.stringify(existingBookings));
        }
    </script>
</body>

</html>
